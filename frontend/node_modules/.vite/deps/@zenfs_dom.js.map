{
  "version": 3,
  "sources": ["../../@zenfs/dom/dist/utils.js", "../../@zenfs/dom/dist/access.js", "../../@zenfs/dom/dist/IndexedDB.js", "../../@zenfs/dom/dist/storage.js", "../../@zenfs/dom/dist/xml.js"],
  "sourcesContent": ["import { ErrnoError, Errno } from '@zenfs/core';\n/**\n * Converts a DOMException into an Errno\n * @see https://developer.mozilla.org/Web/API/DOMException\n */\nfunction errnoForDOMException(ex) {\n    switch (ex.name) {\n        case 'TypeMismatchError':\n            return 'EPERM';\n        case 'IndexSizeError':\n        case 'HierarchyRequestError':\n        case 'InvalidCharacterError':\n        case 'InvalidStateError':\n        case 'SyntaxError':\n        case 'NamespaceError':\n        case 'ConstraintError':\n        case 'VersionError':\n        case 'URLMismatchError':\n        case 'InvalidNodeTypeError':\n            return 'EINVAL';\n        case 'WrongDocumentError':\n            return 'EXDEV';\n        case 'NoModificationAllowedError':\n        case 'InvalidModificationError':\n        case 'InvalidAccessError':\n        case 'SecurityError':\n        case 'NotAllowedError':\n            return 'EACCES';\n        case 'NotFoundError':\n            return 'ENOENT';\n        case 'NotSupportedError':\n            return 'ENOTSUP';\n        case 'InUseAttributeError':\n            return 'EBUSY';\n        case 'NetworkError':\n            return 'ENETDOWN';\n        case 'AbortError':\n            return 'EINTR';\n        case 'QuotaExceededError':\n            return 'ENOSPC';\n        case 'TimeoutError':\n            return 'ETIMEDOUT';\n        case 'ReadOnlyError':\n            return 'EROFS';\n        case 'DataCloneError':\n        case 'EncodingError':\n        case 'NotReadableError':\n        case 'DataError':\n        case 'TransactionInactiveError':\n        case 'OperationError':\n        case 'UnknownError':\n        default:\n            return 'EIO';\n    }\n}\n/**\n * Handles converting errors, then rethrowing them\n * @internal\n */\nexport function convertException(ex, path, syscall) {\n    if (ex instanceof ErrnoError)\n        return ex;\n    const code = ex instanceof DOMException ? Errno[errnoForDOMException(ex)] : Errno.EIO;\n    const error = new ErrnoError(code, ex.message, path, syscall);\n    error.stack = ex.stack;\n    error.cause = ex.cause;\n    return error;\n}\n", "import { Async, constants, Errno, ErrnoError, IndexFS, InMemory, Inode, log } from '@zenfs/core';\nimport { basename, dirname, join } from '@zenfs/core/path.js';\nimport { S_IFDIR, S_IFMT } from '@zenfs/core/vfs/constants.js';\nimport { _throw } from 'utilium';\nimport { convertException } from './utils.js';\nfunction isResizable(buffer) {\n    if (buffer instanceof ArrayBuffer)\n        return buffer.resizable;\n    if (buffer instanceof SharedArrayBuffer)\n        return buffer.growable;\n    return false;\n}\n/**\n * Since `FileSystemHandle.kind` doesn't have correct type support\n */\nfunction isKind(handle, kind) {\n    return handle.kind == kind;\n}\nexport class WebAccessFS extends Async(IndexFS) {\n    /**\n     * Loads all of the handles.\n     * @internal @hidden\n     */\n    async _loadHandles(path, handle) {\n        for await (const [key, child] of handle.entries()) {\n            const p = join(path, key);\n            this._handles.set(p, child);\n            if (isKind(child, 'directory'))\n                await this._loadHandles(p, child);\n        }\n    }\n    /**\n     * Loads metadata\n     * @internal @hidden\n     */\n    async _loadMetadata(metadataPath) {\n        if (metadataPath) {\n            const handle = this.get('file', metadataPath);\n            const file = await handle.getFile();\n            const raw = await file.text();\n            const data = JSON.parse(raw);\n            this.index.fromJSON(data);\n            return;\n        }\n        for (const [path, handle] of this._handles) {\n            if (isKind(handle, 'file')) {\n                const { lastModified, size } = await handle.getFile();\n                this.index.set(path, new Inode({ mode: 0o644 | constants.S_IFREG, size, mtimeMs: lastModified }));\n                continue;\n            }\n            if (!isKind(handle, 'directory'))\n                throw new ErrnoError(Errno.EIO, 'Invalid handle', path);\n            this.index.set(path, new Inode({ mode: 0o777 | constants.S_IFDIR, size: 0 }));\n        }\n    }\n    constructor(handle) {\n        super(0x77656261, 'webaccessfs');\n        this._handles = new Map();\n        /**\n         * @hidden\n         */\n        this._sync = InMemory.create({ label: 'accessfs-cache' });\n        this.attributes.set('no_buffer_resize');\n        this._handles.set('/', handle);\n    }\n    async remove(path) {\n        const handle = this.get('directory', dirname(path));\n        await handle.removeEntry(basename(path), { recursive: true }).catch(ex => _throw(convertException(ex, path)));\n    }\n    removeSync(path) {\n        throw log.crit(ErrnoError.With('ENOSYS', path));\n    }\n    async read(path, buffer, offset, end) {\n        if (end <= offset)\n            return;\n        const handle = this.get('file', path, 'write');\n        const file = await handle.getFile();\n        const data = await file.arrayBuffer();\n        if (data.byteLength < end - offset)\n            throw ErrnoError.With('ENODATA', path, 'read');\n        buffer.set(new Uint8Array(data, offset, end - offset));\n    }\n    async write(path, buffer, offset) {\n        if (isResizable(buffer.buffer)) {\n            const newBuffer = new Uint8Array(new ArrayBuffer(buffer.byteLength), buffer.byteOffset, buffer.byteLength);\n            newBuffer.set(buffer);\n            buffer = newBuffer;\n        }\n        const inode = this.index.get(path);\n        if (!inode)\n            throw ErrnoError.With('ENOENT', path, 'write');\n        const isDir = (inode.mode & S_IFMT) == S_IFDIR;\n        let handle;\n        try {\n            handle = this.get(isDir ? 'directory' : 'file', path, 'write');\n        }\n        catch {\n            const parent = this.get('directory', dirname(path), 'write');\n            handle = await parent[isDir ? 'getDirectoryHandle' : 'getFileHandle'](basename(path), { create: true }).catch((ex) => _throw(convertException(ex, path)));\n            this._handles.set(path, handle);\n        }\n        if (isDir)\n            return;\n        if (isKind(handle, 'directory')) {\n            log.crit(new ErrnoError(Errno.EIO, 'Mismatch in entry kind on write', path, 'write'));\n            return;\n        }\n        const writable = await handle.createWritable();\n        try {\n            await writable.seek(offset);\n        }\n        catch {\n            await writable.write({ type: 'seek', position: offset });\n        }\n        await writable.write(buffer);\n        await writable.close();\n        const { size, lastModified } = await handle.getFile();\n        inode.update({ size, mtimeMs: lastModified });\n        this.index.set(path, inode);\n    }\n    /**\n     * Do not use!\n     * @deprecated @internal @hidden\n     */\n    async writeFile(path, data) {\n        return this.write(path, data, 0);\n    }\n    async mkdir(path, options) {\n        const inode = await super.mkdir(path, options);\n        const handle = this.get('directory', dirname(path), 'mkdir');\n        const dir = await handle.getDirectoryHandle(basename(path), { create: true }).catch((ex) => _throw(convertException(ex, path)));\n        this._handles.set(path, dir);\n        return inode;\n    }\n    get(kind = null, path, syscall) {\n        const handle = this._handles.get(path);\n        if (!handle)\n            throw ErrnoError.With('ENODATA', path, syscall);\n        if (kind && !isKind(handle, kind))\n            throw ErrnoError.With(kind == 'directory' ? 'ENOTDIR' : 'EISDIR', path, syscall);\n        return handle;\n    }\n}\nconst _WebAccess = {\n    name: 'WebAccess',\n    options: {\n        handle: { type: 'object', required: true },\n        metadata: { type: 'string', required: false },\n    },\n    async create(options) {\n        const fs = new WebAccessFS(options.handle);\n        await fs._loadHandles('/', options.handle);\n        await fs._loadMetadata(options.metadata);\n        return fs;\n    },\n};\nexport const WebAccess = _WebAccess;\n", "import { AsyncTransaction, StoreFS, log } from '@zenfs/core';\nimport { convertException } from './utils.js';\nfunction wrap(request) {\n    return new Promise((resolve, reject) => {\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = e => {\n            e.preventDefault();\n            reject(convertException(request.error));\n        };\n    });\n}\n/**\n * @internal @hidden\n */\nexport class IndexedDBTransaction extends AsyncTransaction {\n    constructor(tx, store) {\n        super(store);\n        this.tx = tx;\n        this.store = store;\n        this._idb = tx.objectStore(store.name);\n    }\n    async keys() {\n        return (await wrap(this._idb.getAllKeys())).filter(k => typeof k == 'string').map(k => Number(k));\n    }\n    async get(id) {\n        const data = await wrap(this._idb.get(id.toString()));\n        if (data)\n            this._cached(id, { size: data.byteLength }).add(data, 0);\n        return data;\n    }\n    async set(id, data) {\n        this._cached(id, { size: data.byteLength }).add(data, 0);\n        await wrap(this._idb.put(data, id.toString()));\n    }\n    remove(id) {\n        this.store.cache.delete(id);\n        return wrap(this._idb.delete(id.toString()));\n    }\n    async commit() {\n        const { promise, resolve, reject } = Promise.withResolvers();\n        this.tx.oncomplete = () => resolve();\n        this.tx.onerror = () => reject(convertException(this.tx.error));\n        this.tx.commit();\n        return promise;\n    }\n    async abort() {\n        const { promise, resolve, reject } = Promise.withResolvers();\n        this.tx.onabort = () => resolve();\n        this.tx.onerror = () => reject(convertException(this.tx.error));\n        this.tx.abort();\n        return promise;\n    }\n}\nasync function createDB(name, indexedDB = globalThis.indexedDB) {\n    const req = indexedDB.open(name);\n    req.onupgradeneeded = () => {\n        const db = req.result;\n        // This should never happen; we're at version 1. Why does another database exist?\n        if (db.objectStoreNames.contains(name)) {\n            log.warn('Found unexpected object store: ' + name);\n            db.deleteObjectStore(name);\n        }\n        db.createObjectStore(name);\n    };\n    return await wrap(req);\n}\nexport class IndexedDBStore {\n    constructor(db) {\n        this.db = db;\n        this.cache = new Map();\n    }\n    sync() {\n        return Promise.resolve();\n    }\n    get name() {\n        return this.db.name;\n    }\n    transaction() {\n        const tx = this.db.transaction(this.name, 'readwrite');\n        return new IndexedDBTransaction(tx, this);\n    }\n}\n/**\n * A file system that uses the IndexedDB key value file system.\n */\nconst _IndexedDB = {\n    name: 'IndexedDB',\n    options: {\n        storeName: { type: 'string', required: false },\n        idbFactory: { type: 'object', required: false },\n    },\n    async isAvailable({ idbFactory = globalThis.indexedDB }) {\n        try {\n            if (!(idbFactory instanceof IDBFactory))\n                return false;\n            const req = idbFactory.open('__zenfs_test');\n            await wrap(req);\n            return true;\n        }\n        catch {\n            return false;\n        }\n        finally {\n            idbFactory?.deleteDatabase('__zenfs_test');\n        }\n    },\n    async create(options) {\n        const db = await createDB(options.storeName || 'zenfs', options.idbFactory);\n        const store = new IndexedDBStore(db);\n        const fs = new StoreFS(store);\n        if (options?.disableAsyncCache) {\n            log.notice('Async preloading disabled for IndexedDB');\n            return fs;\n        }\n        const tx = store.transaction();\n        for (const id of await tx.keys()) {\n            await tx.get(id); // Adds to cache\n        }\n        return fs;\n    },\n};\nexport const IndexedDB = _IndexedDB;\n", "import { Errno, ErrnoError, StoreFS, SyncMapTransaction } from '@zenfs/core';\nimport { decodeASCII, encodeASCII } from 'utilium';\n/**\n * A synchronous key-value store backed by Storage.\n */\nexport class WebStorageStore {\n    get name() {\n        return WebStorage.name;\n    }\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /* node:coverage ignore next 10 */\n    clear() {\n        this.storage.clear();\n    }\n    clearSync() {\n        this.storage.clear();\n    }\n    async sync() { }\n    transaction() {\n        return new SyncMapTransaction(this);\n    }\n    keys() {\n        return Object.keys(this.storage).map(k => Number(k));\n    }\n    get(key) {\n        const data = this.storage.getItem(key.toString());\n        if (typeof data != 'string') {\n            return;\n        }\n        return encodeASCII(data);\n    }\n    set(key, data) {\n        try {\n            this.storage.setItem(key.toString(), decodeASCII(data));\n        }\n        catch {\n            throw new ErrnoError(Errno.ENOSPC, 'Storage is full.');\n        }\n    }\n    delete(key) {\n        try {\n            this.storage.removeItem(key.toString());\n        }\n        catch (e) {\n            throw new ErrnoError(Errno.EIO, 'Unable to delete key ' + key + ': ' + e);\n        }\n    }\n}\n/**\n * A synchronous file system backed by a `Storage` (e.g. localStorage).\n */\nconst _WebStorage = {\n    name: 'WebStorage',\n    options: {\n        storage: { type: 'object', required: false },\n    },\n    /**\n     * @todo Consider replacing `instanceof` with a duck-typing check?\n     */\n    isAvailable(config) {\n        return (config?.storage ?? globalThis.localStorage) instanceof globalThis.Storage;\n    },\n    create({ storage = globalThis.localStorage }) {\n        return new StoreFS(new WebStorageStore(storage));\n    },\n};\nexport const WebStorage = _WebStorage;\n", "import { _inode_fields, constants, Errno, ErrnoError, FileSystem, Inode, Sync } from '@zenfs/core';\nimport { basename, dirname } from '@zenfs/core/path.js';\nimport { decodeASCII, encodeASCII } from 'utilium';\nfunction get_stats(node) {\n    const stats = {};\n    for (const key of _inode_fields) {\n        const value = node.getAttribute(key);\n        if (value !== null && value !== undefined)\n            stats[key] = parseInt(value, 16);\n    }\n    return new Inode(stats);\n}\nfunction set_stats(node, stats) {\n    for (const key of Object.keys(stats)) {\n        if (!(key in _inode_fields) || stats[key] === undefined)\n            continue;\n        node.setAttribute(key, stats[key].toString(16));\n    }\n}\nfunction get_paths(node, contents = false) {\n    let paths;\n    try {\n        const raw = contents ? node.textContent : node.getAttribute('paths');\n        paths = JSON.parse(raw || '[]');\n    }\n    catch {\n        paths = [];\n    }\n    return paths;\n}\nexport class XMLFS extends Sync(FileSystem) {\n    constructor(\n    /**\n     * @inheritDoc XMLOptions.root\n     */\n    root = new DOMParser().parseFromString('<fs></fs>', 'application/xml').documentElement) {\n        super(0x20786d6c, 'xmltmpfs');\n        this.root = root;\n        try {\n            this.mkdirSync('/', { uid: 0, gid: 0, mode: 0o777 });\n        }\n        catch (e) {\n            const error = e;\n            if (error.code != 'EEXIST')\n                throw error;\n        }\n    }\n    renameSync(oldPath, newPath) {\n        const node = this.get('rename', oldPath);\n        this.remove('rename', node, oldPath);\n        this.add('rename', node, newPath);\n    }\n    statSync(path) {\n        return get_stats(this.get('stat', path));\n    }\n    createFileSync(path, options) {\n        const parent = this.statSync(dirname(path));\n        const inode = new Inode({\n            mode: options.mode | constants.S_IFREG,\n            uid: parent.mode & constants.S_ISUID ? parent.uid : options.uid,\n            gid: parent.mode & constants.S_ISGID ? parent.gid : options.gid,\n        });\n        this.create('createFile', path, inode);\n        return inode;\n    }\n    unlinkSync(path) {\n        const node = this.get('unlink', path);\n        if (get_stats(node).mode & constants.S_IFDIR)\n            throw ErrnoError.With('EISDIR', path, 'unlink');\n        this.remove('unlink', node, path);\n    }\n    rmdirSync(path) {\n        const node = this.get('rmdir', path);\n        if (node.textContent?.length)\n            throw ErrnoError.With('ENOTEMPTY', path, 'rmdir');\n        if (!(get_stats(node).mode & constants.S_IFDIR))\n            throw ErrnoError.With('ENOTDIR', path, 'rmdir');\n        this.remove('rmdir', node, path);\n    }\n    mkdirSync(path, options) {\n        const parent = this.statSync(dirname(path));\n        const inode = new Inode({\n            mode: options.mode | constants.S_IFDIR,\n            uid: parent.mode & constants.S_ISUID ? parent.uid : options.uid,\n            gid: parent.mode & constants.S_ISGID ? parent.gid : options.gid,\n        });\n        this.create('mkdir', path, inode).textContent = '[]';\n        return inode;\n    }\n    readdirSync(path) {\n        const node = this.get('readdir', path);\n        if (!(get_stats(node).mode & constants.S_IFDIR))\n            throw ErrnoError.With('ENOTDIR', path, 'rmdir');\n        try {\n            return JSON.parse(node.textContent);\n        }\n        catch (e) {\n            throw new ErrnoError(Errno.EIO, 'Invalid directory listing: ' + e, path, 'readdir');\n        }\n    }\n    linkSync(target, link) {\n        const node = this.get('link', target);\n        this.add('link', node, link);\n    }\n    touchSync(path, metadata) {\n        const node = this.get('touch', path);\n        set_stats(node, metadata);\n    }\n    syncSync() { }\n    readSync(path, buffer, offset, end) {\n        const node = this.get('read', path);\n        const raw = encodeASCII(node.textContent.slice(offset, end));\n        buffer.set(raw);\n    }\n    writeSync(path, buffer, offset) {\n        const node = this.get('write', path);\n        const data = decodeASCII(buffer);\n        const after = node.textContent.slice(offset + data.length);\n        node.textContent = node.textContent.slice(0, offset) + data + after;\n    }\n    toString() {\n        return new XMLSerializer().serializeToString(this.root);\n    }\n    get(syscall, path) {\n        const nodes = this.root.children;\n        if (!nodes)\n            throw ErrnoError.With('EIO', path, syscall);\n        for (let i = 0; i < nodes.length; i++) {\n            if (get_paths(nodes[i]).includes(path))\n                return nodes[i];\n        }\n        throw ErrnoError.With('ENOENT', path, syscall);\n    }\n    create(syscall, path, stats) {\n        if (this.existsSync(path))\n            throw ErrnoError.With('EEXIST', path, syscall);\n        const node = document.createElement('file');\n        this.add(syscall, node, path);\n        set_stats(node, new Inode({\n            ...stats,\n            uid: stats.mode,\n        }));\n        this.root.append(node);\n        return node;\n    }\n    add(syscall, node, path, contents = false) {\n        const paths = get_paths(node, contents);\n        paths.push(path);\n        if (contents) {\n            node.textContent = JSON.stringify(paths);\n            return;\n        }\n        node.setAttribute('paths', JSON.stringify(paths));\n        node.setAttribute('nlink', paths.length.toString(16));\n        if (path != '/') {\n            const parent = this.get(syscall, dirname(path));\n            this.add(syscall, parent, basename(path), true);\n        }\n    }\n    remove(syscall, node, path, contents = false) {\n        const paths = get_paths(node, contents);\n        const i = paths.indexOf(path);\n        if (i == -1)\n            return;\n        paths.splice(i, 1);\n        if (contents) {\n            node.textContent = JSON.stringify(paths);\n            return;\n        }\n        if (!paths.length) {\n            node.remove();\n        }\n        else {\n            node.setAttribute('paths', JSON.stringify(paths));\n            node.setAttribute('nlink', paths.length.toString(16));\n        }\n        if (path != '/') {\n            const parent = this.get(syscall, dirname(path));\n            this.remove(syscall, parent, basename(path), true);\n        }\n    }\n}\nconst _XML = {\n    name: 'XML',\n    options: {\n        root: { type: 'object', required: false },\n    },\n    isAvailable() {\n        return true;\n    },\n    create(options) {\n        return new XMLFS(options.root);\n    },\n};\n/**\n * @experimental\n */\nexport const XML = _XML;\n"],
  "mappings": "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",
  "names": []
}
