{
  "version": 3,
  "sources": ["../../@twind/src/index.ts"],
  "sourcesContent": ["import {\n  twind,\n  cssom,\n  mo as observe,\n  noop,\n  type Sheet,\n  type TwindConfig,\n  type TwindUserConfig,\n} from '@twind/core'\n\nimport { PROD } from 'distilt/env'\n\nexport default function install(\n  config: TwindConfig<any> | TwindUserConfig<any>,\n  isProduction = PROD,\n) {\n  // 1. Create separate adoptable sheet\n  const sheet = adoptable()\n\n  // 2. Use that to create an own twind instance\n  const tw = twind(\n    {\n      ...config,\n      // in production use short hashed class names\n      hash: config.hash ?? isProduction,\n    } as TwindConfig<any>,\n    sheet,\n  )\n\n  // 3. One MutationObserver for all element instances\n  const observer = observe(tw)\n\n  return function install$<\n    T extends {\n      new (...args: any[]): HTMLElement & {\n        connectedCallback?(): void\n        disconnectedCallback?(): void\n      }\n    },\n  >(BaseElement: T) {\n    return class WithTwindElement extends BaseElement {\n      readonly tw = tw\n\n      override connectedCallback() {\n        super.connectedCallback?.()\n        sheet.connect(this)\n        observer.observe(getShadowRoot(this))\n      }\n\n      override disconnectedCallback() {\n        sheet.disconnect(this)\n        super.disconnectedCallback?.()\n      }\n    }\n  }\n}\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var ShadyCSS: { nativeShadow: boolean }\n}\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n * @link https://github.com/lit/lit/blob/393e30cf7c7f97712e524df34e7343147055fc5d/packages/reactive-element/src/css-tag.ts#L13\n */\nconst supportsAdoptingStyleSheets =\n  typeof ShadowRoot !== 'undefined' &&\n  (typeof ShadyCSS === 'undefined' || ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype\n\nfunction getShadowRoot(element: HTMLElement): ShadowRoot {\n  return element.shadowRoot || element.attachShadow({ mode: 'open' })\n}\n\ninterface AdoptableSheet extends Sheet<CSSStyleSheet> {\n  connect(element: HTMLElement): void\n  disconnect(element: HTMLElement): void\n}\n\nfunction adoptable(): AdoptableSheet {\n  // TODO: search for SSR stylesheet\n  if (supportsAdoptingStyleSheets) {\n    try {\n      // Try using adoptedStyleSheets — not supported in all browsers\n      const sheet = cssom(new CSSStyleSheet()) as AdoptableSheet\n\n      sheet.connect = (element) => {\n        const shadowRoot = getShadowRoot(element)\n        shadowRoot.adoptedStyleSheets = [...shadowRoot.adoptedStyleSheets, sheet.target]\n      }\n\n      sheet.disconnect = noop\n\n      return sheet\n    } catch {\n      // ignore — continue with fallback\n    }\n  }\n\n  // Fallback: create a dedicated stylesheet for each element instance\n\n  // Create our base stylesheet — its css rules will be copied to each element style\n  const style = document.createElement('style')\n  // Prevent this style sheet from being applied anywhere\n  style.media = 'not all'\n  document.head.prepend(style)\n\n  const sheets = [cssom(style)]\n\n  /** @type {WeakMap<HTMLElement, import('@twind/core').Sheet>} */\n  const sheetsByElement = new WeakMap()\n\n  return {\n    get target() {\n      return sheets[0].target\n    },\n\n    snapshot() {\n      const restores = sheets.map((sheet) => sheet.snapshot())\n      return () => restores.forEach((restore) => restore())\n    },\n\n    clear() {\n      sheets.forEach((sheets) => sheets.clear())\n    },\n\n    destroy() {\n      sheets.forEach((sheets) => sheets.destroy())\n    },\n\n    insert(css, index, rule) {\n      // We first insert the rule into our base sheet\n      // This call will check (try-catch) and warn if necessary\n      sheets[0].insert(css, index, rule)\n\n      // For all connected sheets we insert the resulting rule directly\n      // by-passing the try-catch block\n      const cssRule = this.target.cssRules[index]\n      sheets.forEach(\n        (sheets, notFirst) => notFirst && sheets.target.insertRule(cssRule.cssText, index),\n      )\n    },\n\n    resume(addClassName, insert) {\n      return sheets[0].resume(addClassName, insert)\n    },\n\n    connect(element) {\n      const style = document.createElement('style')\n      getShadowRoot(element).appendChild(style)\n\n      const sheet = cssom(style)\n\n      // Directly copy all rules from our base sheet\n      const { cssRules } = this.target\n      for (let i = 0; i < cssRules.length; i++) {\n        sheet.target.insertRule(cssRules[i].cssText, i)\n      }\n\n      sheets.push(sheet)\n      sheetsByElement.set(element, sheet)\n    },\n\n    disconnect(element) {\n      const index = sheets.indexOf(sheetsByElement.get(element))\n      if (index >= 0) {\n        sheets.splice(index, 1)\n      }\n    },\n  }\n}\n"],
  "mappings": "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",
  "names": ["install", "config", "isProduction", "sheet", "supportsAdoptingStyleSheets", "cssom", "CSSStyleSheet", "connect", "element", "shadowRoot", "getShadowRoot", "adoptedStyleSheets", "target", "disconnect", "noop", "style", "document", "createElement", "media", "head", "prepend", "sheets", "sheetsByElement", "WeakMap", "snapshot", "restores", "map", "forEach", "restore", "clear", "destroy", "insert", "css", "index", "rule", "cssRule", "cssRules", "notFirst", "insertRule", "cssText", "resume", "addClassName", "appendChild", "i", "length", "push", "set", "indexOf", "get", "splice", "tw", "twind", "hash", "observer", "observe", "install$", "BaseElement", "WithTwindElement", "connectedCallback", "disconnectedCallback", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "attachShadow", "mode"]
}
