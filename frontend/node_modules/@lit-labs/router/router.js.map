{"version":3,"file":"router.js","sources":["src/router.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Routes} from './routes.js';\n\n// We cache the origin since it can't change\nconst origin = location.origin || location.protocol + '//' + location.host;\n\n/**\n * A root-level router that installs global event listeners to intercept\n * navigation.\n *\n * This class extends Routes so that it can also have a route configuration.\n *\n * There should only be one Router instance on a page, since the Router\n * installs global event listeners on `window` and `document`. Nested\n * routes should be configured with the `Routes` class.\n */\nexport class Router extends Routes {\n  override hostConnected() {\n    super.hostConnected();\n    window.addEventListener('click', this._onClick);\n    window.addEventListener('popstate', this._onPopState);\n    // Kick off routed rendering by going to the current URL\n    this.goto(window.location.pathname);\n  }\n\n  override hostDisconnected() {\n    super.hostDisconnected();\n    window.removeEventListener('click', this._onClick);\n    window.removeEventListener('popstate', this._onPopState);\n  }\n\n  private _onClick = (e: MouseEvent) => {\n    const isNonNavigationClick =\n      e.button !== 0 || e.metaKey || e.ctrlKey || e.shiftKey;\n    if (e.defaultPrevented || isNonNavigationClick) {\n      return;\n    }\n\n    const anchor = e\n      .composedPath()\n      .find((n) => (n as HTMLElement).tagName === 'A') as\n      | HTMLAnchorElement\n      | undefined;\n    if (\n      anchor === undefined ||\n      anchor.target !== '' ||\n      anchor.hasAttribute('download') ||\n      anchor.getAttribute('rel') === 'external'\n    ) {\n      return;\n    }\n\n    const href = anchor.href;\n    if (href === '' || href.startsWith('mailto:')) {\n      return;\n    }\n\n    const location = window.location;\n    if (anchor.origin !== origin) {\n      return;\n    }\n\n    e.preventDefault();\n    if (href !== location.href) {\n      window.history.pushState({}, '', href);\n      this.goto(anchor.pathname);\n    }\n  };\n\n  private _onPopState = (_e: PopStateEvent) => {\n    this.goto(window.location.pathname);\n  };\n}\n"],"names":["origin","location","protocol","host","Router","Routes","constructor","this","_onClick","e","isNonNavigationClick","button","metaKey","ctrlKey","shiftKey","defaultPrevented","anchor","composedPath","find","n","tagName","undefined","target","hasAttribute","getAttribute","href","startsWith","window","preventDefault","history","pushState","goto","pathname","_onPopState","_e","hostConnected","super","addEventListener","hostDisconnected","removeEventListener"],"mappings":";;;;;;AASA,MAAMA,EAASC,SAASD,QAAUC,SAASC,SAAW,KAAOD,SAASE,KAYhE,MAAOC,UAAeC,EAA5B,WAAAC,uBAeUC,KAAAC,EAAYC,IAClB,MAAMC,EACS,IAAbD,EAAEE,QAAgBF,EAAEG,SAAWH,EAAEI,SAAWJ,EAAEK,SAChD,GAAIL,EAAEM,kBAAoBL,EACxB,OAGF,MAAMM,EAASP,EACZQ,eACAC,MAAMC,GAAqC,MAA9BA,EAAkBC,UAGlC,QACaC,IAAXL,GACkB,KAAlBA,EAAOM,QACPN,EAAOO,aAAa,aACW,aAA/BP,EAAOQ,aAAa,OAEpB,OAGF,MAAMC,EAAOT,EAAOS,KACpB,GAAa,KAATA,GAAeA,EAAKC,WAAW,WACjC,OAGF,MAAMzB,EAAW0B,OAAO1B,SACpBe,EAAOhB,SAAWA,IAItBS,EAAEmB,iBACEH,IAASxB,EAASwB,OACpBE,OAAOE,QAAQC,UAAU,CAAE,EAAE,GAAIL,GACjClB,KAAKwB,KAAKf,EAAOgB,WAClB,EAGKzB,KAAA0B,EAAeC,IACrB3B,KAAKwB,KAAKJ,OAAO1B,SAAS+B,SAAS,CAEtC,CAvDU,aAAAG,GACPC,MAAMD,gBACNR,OAAOU,iBAAiB,QAAS9B,KAAKC,GACtCmB,OAAOU,iBAAiB,WAAY9B,KAAK0B,GAEzC1B,KAAKwB,KAAKJ,OAAO1B,SAAS+B,SAC3B,CAEQ,gBAAAM,GACPF,MAAME,mBACNX,OAAOY,oBAAoB,QAAShC,KAAKC,GACzCmB,OAAOY,oBAAoB,WAAYhC,KAAK0B,EAC7C"}