import { Stats, type StatsLike } from '@zenfs/core/stats.js';
/**
 * Room inode
 * @hidden
 */
export declare const rootIno: 0n;
/**
 * Generic inode definition that can easily be serialized.
 * @internal
 * @todo [BREAKING] Remove 58 byte Inode upgrade path
 */
export declare class Inode implements StatsLike {
    constructor(buffer?: ArrayBufferLike | ArrayBufferView);
    data: bigint;
    size: number;
    mode: number;
    nlink: number;
    uid: number;
    gid: number;
    atimeMs: number;
    birthtimeMs: number;
    mtimeMs: number;
    ctimeMs: number;
    ino: bigint;
    /**
     * Handy function that converts the Inode to a Node Stats object.
     */
    toStats(): Stats;
    /**
     * Updates the Inode using information from the stats object. Used by file
     * systems at sync time, e.g.:
     * - Program opens file and gets a File object.
     * - Program mutates file. File object is responsible for maintaining
     *   metadata changes locally -- typically in a Stats object.
     * - Program closes file. File object's metadata changes are synced with the
     *   file system.
     * @return True if any changes have occurred.
     */
    update(stats: Readonly<Stats>): boolean;
}
