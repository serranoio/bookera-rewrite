import type { CreationOptions, FileSystem, InodeLike } from '@zenfs/core';
import { IndexFS } from '@zenfs/core';
export interface WebAccessOptions {
    handle: FileSystemDirectoryHandle;
    metadata?: string;
}
type HKindToType<T extends FileSystemHandleKind> = T extends 'directory' ? FileSystemDirectoryHandle : T extends 'file' ? FileSystemFileHandle : FileSystemHandle;
declare const WebAccessFS_base: import("@zenfs/core").Mixin<typeof IndexFS, import("@zenfs/core").AsyncMixin>;
export declare class WebAccessFS extends WebAccessFS_base {
    protected _handles: Map<string, FileSystemHandle>;
    /**
     * Loads all of the handles.
     * @internal @hidden
     */
    _loadHandles(path: string, handle: FileSystemDirectoryHandle): Promise<void>;
    /**
     * Loads metadata
     * @internal @hidden
     */
    _loadMetadata(metadataPath?: string): Promise<void>;
    /**
     * @hidden
     */
    _sync: FileSystem;
    constructor(handle: FileSystemDirectoryHandle);
    remove(path: string): Promise<void>;
    protected removeSync(path: string): void;
    read(path: string, buffer: Uint8Array, offset: number, end: number): Promise<void>;
    write(path: string, buffer: Uint8Array, offset: number): Promise<void>;
    /**
     * Do not use!
     * @deprecated @internal @hidden
     */
    writeFile(path: string, data: Uint8Array): Promise<void>;
    mkdir(path: string, options: CreationOptions): Promise<InodeLike>;
    protected get<const T extends FileSystemHandleKind | null>(kind: T | undefined, path: string, syscall?: string): T extends FileSystemHandleKind ? HKindToType<T> : FileSystemHandle;
}
declare const _WebAccess: {
    readonly name: "WebAccess";
    readonly options: {
        readonly handle: {
            readonly type: "object";
            readonly required: true;
        };
        readonly metadata: {
            readonly type: "string";
            readonly required: false;
        };
    };
    readonly create: (options: WebAccessOptions) => Promise<WebAccessFS>;
};
type _WebAccess = typeof _WebAccess;
export interface WebAccess extends _WebAccess {
}
export declare const WebAccess: WebAccess;
export {};
